//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class unicorn_databaseEntities : DbContext
    {
        public unicorn_databaseEntities()
            : base("name=unicorn_databaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppAnswer> AppAnswers { get; set; }
        public virtual DbSet<Applicant> Applicants { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<IntAssign> IntAssigns { get; set; }
        public virtual DbSet<Interview> Interviews { get; set; }
        public virtual DbSet<Mark> Marks { get; set; }
        public virtual DbSet<NotificationDate> NotificationDates { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int spAddApplicantInterviews(Nullable<int> interviewId, Nullable<int> applicantId)
        {
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("interviewId", interviewId) :
                new ObjectParameter("interviewId", typeof(int));
    
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("applicantId", applicantId) :
                new ObjectParameter("applicantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddApplicantInterviews", interviewIdParameter, applicantIdParameter);
        }
    
        public virtual int spAddExamApplicant(Nullable<int> examId, Nullable<int> applicantId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("ApplicantId", applicantId) :
                new ObjectParameter("ApplicantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddExamApplicant", examIdParameter, applicantIdParameter);
        }
    
        public virtual int spAddInterviewres(Nullable<int> interviewId, Nullable<int> interviewer1Id)
        {
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("interviewId", interviewId) :
                new ObjectParameter("interviewId", typeof(int));
    
            var interviewer1IdParameter = interviewer1Id.HasValue ?
                new ObjectParameter("interviewer1Id", interviewer1Id) :
                new ObjectParameter("interviewer1Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddInterviewres", interviewIdParameter, interviewer1IdParameter);
        }
    
        public virtual int spAddQandA(Nullable<int> questionId, string questionType, string question, Nullable<System.DateTime> date, Nullable<int> userId, string answer1, Nullable<bool> answer1state, string answer2, Nullable<bool> answer2state, string answer3, Nullable<bool> answer3state, string answer4, Nullable<bool> answer4state)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var questionTypeParameter = questionType != null ?
                new ObjectParameter("QuestionType", questionType) :
                new ObjectParameter("QuestionType", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var answer1Parameter = answer1 != null ?
                new ObjectParameter("Answer1", answer1) :
                new ObjectParameter("Answer1", typeof(string));
    
            var answer1stateParameter = answer1state.HasValue ?
                new ObjectParameter("Answer1state", answer1state) :
                new ObjectParameter("Answer1state", typeof(bool));
    
            var answer2Parameter = answer2 != null ?
                new ObjectParameter("Answer2", answer2) :
                new ObjectParameter("Answer2", typeof(string));
    
            var answer2stateParameter = answer2state.HasValue ?
                new ObjectParameter("Answer2state", answer2state) :
                new ObjectParameter("Answer2state", typeof(bool));
    
            var answer3Parameter = answer3 != null ?
                new ObjectParameter("Answer3", answer3) :
                new ObjectParameter("Answer3", typeof(string));
    
            var answer3stateParameter = answer3state.HasValue ?
                new ObjectParameter("Answer3state", answer3state) :
                new ObjectParameter("Answer3state", typeof(bool));
    
            var answer4Parameter = answer4 != null ?
                new ObjectParameter("Answer4", answer4) :
                new ObjectParameter("Answer4", typeof(string));
    
            var answer4stateParameter = answer4state.HasValue ?
                new ObjectParameter("Answer4state", answer4state) :
                new ObjectParameter("Answer4state", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddQandA", questionIdParameter, questionTypeParameter, questionParameter, dateParameter, userIdParameter, answer1Parameter, answer1stateParameter, answer2Parameter, answer2stateParameter, answer3Parameter, answer3stateParameter, answer4Parameter, answer4stateParameter);
        }
    
        public virtual int spAddTotalMarks(Nullable<int> applicantId, Nullable<int> mCQMarks)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("ApplicantId", applicantId) :
                new ObjectParameter("ApplicantId", typeof(int));
    
            var mCQMarksParameter = mCQMarks.HasValue ?
                new ObjectParameter("MCQMarks", mCQMarks) :
                new ObjectParameter("MCQMarks", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddTotalMarks", applicantIdParameter, mCQMarksParameter);
        }
    
        public virtual ObjectResult<spCheckLogin_Result> spCheckLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCheckLogin_Result>("spCheckLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spCheckLoginInWebApp_Result> spCheckLoginInWebApp(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCheckLoginInWebApp_Result>("spCheckLoginInWebApp", usernameParameter, passwordParameter);
        }
    
        public virtual int spCreateInterview(Nullable<int> interviewId, Nullable<System.DateTime> date, Nullable<System.DateTime> time, Nullable<int> adminId)
        {
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("interviewId", interviewId) :
                new ObjectParameter("interviewId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("adminId", adminId) :
                new ObjectParameter("adminId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCreateInterview", interviewIdParameter, dateParameter, timeParameter, adminIdParameter);
        }
    
        public virtual int spDeleteExam(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteExam", examIdParameter);
        }
    
        public virtual int spDeleteInterview(Nullable<int> interviewId)
        {
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("interviewId", interviewId) :
                new ObjectParameter("interviewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteInterview", interviewIdParameter);
        }
    
        public virtual int spEditApplicants(Nullable<int> applicantId, string firstName, string lastName, string gender, string nIC, string tepNo, string email, Nullable<int> state)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("ApplicantId", applicantId) :
                new ObjectParameter("ApplicantId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var nICParameter = nIC != null ?
                new ObjectParameter("NIC", nIC) :
                new ObjectParameter("NIC", typeof(string));
    
            var tepNoParameter = tepNo != null ?
                new ObjectParameter("TepNo", tepNo) :
                new ObjectParameter("TepNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditApplicants", applicantIdParameter, firstNameParameter, lastNameParameter, genderParameter, nICParameter, tepNoParameter, emailParameter, stateParameter);
        }
    
        public virtual int spEditQusnAns(Nullable<int> questionId, string question, string answer1, Nullable<bool> answer1state, string answer2, Nullable<bool> answer2state, string answer3, Nullable<bool> answer3state, string answer4, Nullable<bool> answer4state)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answer1Parameter = answer1 != null ?
                new ObjectParameter("Answer1", answer1) :
                new ObjectParameter("Answer1", typeof(string));
    
            var answer1stateParameter = answer1state.HasValue ?
                new ObjectParameter("Answer1state", answer1state) :
                new ObjectParameter("Answer1state", typeof(bool));
    
            var answer2Parameter = answer2 != null ?
                new ObjectParameter("Answer2", answer2) :
                new ObjectParameter("Answer2", typeof(string));
    
            var answer2stateParameter = answer2state.HasValue ?
                new ObjectParameter("Answer2state", answer2state) :
                new ObjectParameter("Answer2state", typeof(bool));
    
            var answer3Parameter = answer3 != null ?
                new ObjectParameter("Answer3", answer3) :
                new ObjectParameter("Answer3", typeof(string));
    
            var answer3stateParameter = answer3state.HasValue ?
                new ObjectParameter("Answer3state", answer3state) :
                new ObjectParameter("Answer3state", typeof(bool));
    
            var answer4Parameter = answer4 != null ?
                new ObjectParameter("Answer4", answer4) :
                new ObjectParameter("Answer4", typeof(string));
    
            var answer4stateParameter = answer4state.HasValue ?
                new ObjectParameter("Answer4state", answer4state) :
                new ObjectParameter("Answer4state", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditQusnAns", questionIdParameter, questionParameter, answer1Parameter, answer1stateParameter, answer2Parameter, answer2stateParameter, answer3Parameter, answer3stateParameter, answer4Parameter, answer4stateParameter);
        }
    
        public virtual int spEditUsers(Nullable<int> userId, string empId, string firstName, string lastName, string gender, string email, string tepNo, Nullable<bool> admin, Nullable<bool> interviewer, Nullable<bool> receiptionist)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var empIdParameter = empId != null ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var tepNoParameter = tepNo != null ?
                new ObjectParameter("TepNo", tepNo) :
                new ObjectParameter("TepNo", typeof(string));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(bool));
    
            var interviewerParameter = interviewer.HasValue ?
                new ObjectParameter("Interviewer", interviewer) :
                new ObjectParameter("Interviewer", typeof(bool));
    
            var receiptionistParameter = receiptionist.HasValue ?
                new ObjectParameter("Receiptionist", receiptionist) :
                new ObjectParameter("Receiptionist", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditUsers", userIdParameter, empIdParameter, firstNameParameter, lastNameParameter, genderParameter, emailParameter, tepNoParameter, adminParameter, interviewerParameter, receiptionistParameter);
        }
    
        public virtual ObjectResult<spForgotPassword_Result> spForgotPassword(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spForgotPassword_Result>("spForgotPassword", emailParameter);
        }
    
        public virtual ObjectResult<spGetAllUsers_Result> spGetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllUsers_Result>("spGetAllUsers");
        }
    
        public virtual ObjectResult<spGetAnswer_Result> spGetAnswer(Nullable<int> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAnswer_Result>("spGetAnswer", questionIdParameter);
        }
    
        public virtual ObjectResult<spGetApplicantByInterviewId_Result> spGetApplicantByInterviewId(Nullable<int> interviewId)
        {
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("InterviewId", interviewId) :
                new ObjectParameter("InterviewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetApplicantByInterviewId_Result>("spGetApplicantByInterviewId", interviewIdParameter);
        }
    
        public virtual ObjectResult<spGetApplicantEmail_Result> spGetApplicantEmail(Nullable<int> applicantId, Nullable<int> interviewId)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("applicantId", applicantId) :
                new ObjectParameter("applicantId", typeof(int));
    
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("interviewId", interviewId) :
                new ObjectParameter("interviewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetApplicantEmail_Result>("spGetApplicantEmail", applicantIdParameter, interviewIdParameter);
        }
    
        public virtual ObjectResult<spGetApplicantEmailForExam_Result> spGetApplicantEmailForExam(Nullable<int> applicantId, Nullable<int> examId)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("applicantId", applicantId) :
                new ObjectParameter("applicantId", typeof(int));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetApplicantEmailForExam_Result>("spGetApplicantEmailForExam", applicantIdParameter, examIdParameter);
        }
    
        public virtual ObjectResult<spGetApplicantsByExamId_Result> spGetApplicantsByExamId(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetApplicantsByExamId_Result>("spGetApplicantsByExamId", examIdParameter);
        }
    
        public virtual ObjectResult<spGetApplicantsResults_Result> spGetApplicantsResults(Nullable<int> applicantId)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("applicantId", applicantId) :
                new ObjectParameter("applicantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetApplicantsResults_Result>("spGetApplicantsResults", applicantIdParameter);
        }
    
        public virtual ObjectResult<spGetAppQuestion_Result> spGetAppQuestion(Nullable<int> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAppQuestion_Result>("spGetAppQuestion", questionIdParameter);
        }
    
        public virtual ObjectResult<spGetAppResultSheet_Result> spGetAppResultSheet(Nullable<int> applicantId)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("ApplicantId", applicantId) :
                new ObjectParameter("ApplicantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAppResultSheet_Result>("spGetAppResultSheet", applicantIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetAppState(Nullable<int> applicantId)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("ApplicantId", applicantId) :
                new ObjectParameter("ApplicantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetAppState", applicantIdParameter);
        }
    
        public virtual ObjectResult<spGetExamApplicant_Result> spGetExamApplicant()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetExamApplicant_Result>("spGetExamApplicant");
        }
    
        public virtual ObjectResult<spGetExamByApplicant_Result> spGetExamByApplicant(Nullable<int> applicantId)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("applicantId", applicantId) :
                new ObjectParameter("applicantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetExamByApplicant_Result>("spGetExamByApplicant", applicantIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetExamNotifiers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetExamNotifiers");
        }
    
        public virtual ObjectResult<spGetExamQus_Result> spGetExamQus(Nullable<int> prog, Nullable<int> math, Nullable<int> iq)
        {
            var progParameter = prog.HasValue ?
                new ObjectParameter("prog", prog) :
                new ObjectParameter("prog", typeof(int));
    
            var mathParameter = math.HasValue ?
                new ObjectParameter("math", math) :
                new ObjectParameter("math", typeof(int));
    
            var iqParameter = iq.HasValue ?
                new ObjectParameter("iq", iq) :
                new ObjectParameter("iq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetExamQus_Result>("spGetExamQus", progParameter, mathParameter, iqParameter);
        }
    
        public virtual ObjectResult<spGetInterviewers_Result> spGetInterviewers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetInterviewers_Result>("spGetInterviewers");
        }
    
        public virtual ObjectResult<spGetInterviewInterviewers_Result> spGetInterviewInterviewers(Nullable<int> interviewId)
        {
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("interviewId", interviewId) :
                new ObjectParameter("interviewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetInterviewInterviewers_Result>("spGetInterviewInterviewers", interviewIdParameter);
        }
    
        public virtual ObjectResult<spGetInterviews_Result> spGetInterviews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetInterviews_Result>("spGetInterviews");
        }
    
        public virtual ObjectResult<spGetInterviewsByDate_Result> spGetInterviewsByDate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetInterviewsByDate_Result>("spGetInterviewsByDate", dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetLastInterviewId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetLastInterviewId");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> spGetLastNotifiDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("spGetLastNotifiDate");
        }
    
        public virtual ObjectResult<spGetNotifications_Result> spGetNotifications(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNotifications_Result>("spGetNotifications", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetNotifyExam(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetNotifyExam", dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetNotifyInterviewers(Nullable<int> interviewId)
        {
            var interviewIdParameter = interviewId.HasValue ?
                new ObjectParameter("InterviewId", interviewId) :
                new ObjectParameter("InterviewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetNotifyInterviewers", interviewIdParameter);
        }
    
        public virtual ObjectResult<spGetNotifyInterviews_Result> spGetNotifyInterviews(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNotifyInterviews_Result>("spGetNotifyInterviews", dateParameter);
        }
    
        public virtual ObjectResult<spGetQuestions_Result> spGetQuestions(string questionType)
        {
            var questionTypeParameter = questionType != null ?
                new ObjectParameter("questionType", questionType) :
                new ObjectParameter("questionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetQuestions_Result>("spGetQuestions", questionTypeParameter);
        }
    
        public virtual ObjectResult<spGetUsers_Result> spGetUsers(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUsers_Result>("spGetUsers", userIdParameter);
        }
    
        public virtual int spInsertAppAnswers(Nullable<int> applicantId, Nullable<int> questionId, Nullable<int> answer, Nullable<bool> state)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("ApplicantId", applicantId) :
                new ObjectParameter("ApplicantId", typeof(int));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertAppAnswers", applicantIdParameter, questionIdParameter, answerParameter, stateParameter);
        }
    
        public virtual ObjectResult<spSelectApplicantsForInterview_Result> spSelectApplicantsForInterview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectApplicantsForInterview_Result>("spSelectApplicantsForInterview");
        }
    
        public virtual int spSetNotifyChecked(Nullable<int> notifyId)
        {
            var notifyIdParameter = notifyId.HasValue ?
                new ObjectParameter("NotifyId", notifyId) :
                new ObjectParameter("NotifyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSetNotifyChecked", notifyIdParameter);
        }
    
        public virtual int spUpdateAppState(Nullable<int> applicantId)
        {
            var applicantIdParameter = applicantId.HasValue ?
                new ObjectParameter("ApplicantId", applicantId) :
                new ObjectParameter("ApplicantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateAppState", applicantIdParameter);
        }
    
        public virtual int spUpdateNotificationDate(Nullable<System.DateTime> notifiDate)
        {
            var notifiDateParameter = notifiDate.HasValue ?
                new ObjectParameter("NotifiDate", notifiDate) :
                new ObjectParameter("NotifiDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateNotificationDate", notifiDateParameter);
        }
    }
}
